<Workspace Version="0.9.1.3872" X="-1400.16648670094" Y="206.301371498466" zoom="0.773434935921735" Name="Home" Description="" RunType="Automatic" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap>
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <PythonNodeModels.PythonNode guid="7e6ef32f-0181-43fa-916c-913d9b63467f" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1601.55328649509" y="-253.377701733651" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="2">
      <Script>import sys
sys.path.extend(IN[0])

try:
	from honeybeegrasshopper.radiance.sky.certainIlluminance import SkyWithCertainIlluminanceLevel
	from honeybeegrasshopper.wrapper import Wrapper
except ImportError as e:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component:\n%s"%e)

_illuminanceValue = IN[1]
if _illuminanceValue:
    OUT = Wrapper(SkyWithCertainIlluminanceLevel(_illuminanceValue))</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="742a7dd0-7f5d-4df8-a562-50495a4d41ae" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1399.56995623615" y="-222.843391273802" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="10000;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="7bcebefb-186b-42a0-a778-6b8d72385d35" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="312.223914661138" y="-348.092921190165" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="{&quot;C:\\Users\\Administrator\\Documents\\GitHub\\honeybee-grasshopper&quot;,&#xA;&quot;C:\Program Files (x86)\IronPython 2.7\Lib&quot;};" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1584.58632572478" y="192.368150066834" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="2">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeegrasshopper.radiance import parameters
    from honeybeegrasshopper import wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")

_quality = IN[1]
if _quality:
    radParameters = parameters.RadianceParameters(_quality)
 
    #wrap the object
    OUT = wrapper.Wrapper(radParameters)</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="3b0b27bb-a80c-40ed-81c1-0e6e47f958f8" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1411.408342375" y="225.302015132197" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="2;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="d51848e8-6663-4eaf-a5f1-f164de9dec9f" type="PythonNodeModels.PythonNode" nickname="Analysis Recipe" x="2283.82901332794" y="-303.836383258501" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="5">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeegrasshopper.radiance.recipe.gridbased import GridBasedAnalysisRecipe
    from honeybeegrasshopper import wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")


_HBSky, _testPoints, ptsVectors_, _radParameters_ = IN[1], IN[2], IN[3], IN[4]

if _HBSky and _testPoints and ptsVectors_:
    if _radParameters_:
        _radParameters_ = _radParameters_.unwrap()
    
    analysisRecipe = GridBasedAnalysisRecipe(
        _HBSky.unwrap(), _testPoints, ptsVectors_, _radParameters_
        )
    
    OUT = wrapper.Wrapper(analysisRecipe)</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="f93e6b68-5605-4dfe-9062-8306a522a2ca" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="Generate Test Points" x="1337.67094935627" y="-36.8165925593222" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false">
      <PortInfo index="1" default="True" />
      <PortInfo index="2" default="True" />
      <ID value="3bb214f8-59b8-4ce8-969b-e42d4d05414e" />
      <Name value="Generate Test Points" />
      <Description value="Generate test points from a surface based on number of segments and distance from the surface" />
      <Inputs>
        <Input value="_testSurfaces" />
        <Input value="_numOfSegments_" />
        <Input value="_disFromSurface_" />
      </Inputs>
      <Outputs>
        <Output value="testPts" />
        <Output value="ptsNormal" />
        <Output value="ERRReport" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="fd8d015c-f8f9-4c05-a4b4-596135f301f6" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Geometry.Explode" x="938.013692245535" y="-25.0859930427663" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Geometry.Explode" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="366e171e-fe59-4bbd-9c17-a4f5e9cfff55" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="201.304147077284" y="-263.810074469707" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="13;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="6ea5fbd7-6a71-4fbc-9b3b-b942d8f7ceff" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="199.489903935853" y="-88.8324645759525" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="5;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="e8c06d3d-7e0d-45e0-b0c0-1175a6cc299b" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1201.50108247441" y="48.787836607743" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="-0.762;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="e702b3e5-d7ce-4220-a665-9f783bb961f0" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1201.40697486119" y="-54.2724509508376" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="x[1];" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="8d25a3fa-1ea5-494d-ba86-80793a925f42" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1262.01188015998" y="345.609215035166" isVisible="false" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="x[2];&#xA;List.RemoveItemAtIndex(x, 2);" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="849047e4-cbe3-41d6-9bd4-fbadc1959da7" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1012.31201382626" y="695.977386241156" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="&quot;g_material&quot;;&#xA;0.65;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="68dfd842-2fca-4d0a-a880-1374da132baf" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1264.52947964038" y="665.307742546112" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="3">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeegrasshopper.radiance.material.glass import GlassMaterial
    from honeybeegrasshopper.wrapper import Wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")



_name, _TVis = IN[1:]

if _name and _TVis:
    material = GlassMaterial.bySingleTransValue(_name, _TVis)
    
    OUT = Wrapper(material)</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Watch guid="db482029-a1e5-4167-b16f-f3dc28417864" type="CoreNodeModels.Watch" nickname="Watch" x="1783.0947201486" y="49.451570889174" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <CoreNodeModels.Watch guid="bf50bdad-75cd-4cd6-b151-3f1073797251" type="CoreNodeModels.Watch" nickname="Watch" x="1465.34697393625" y="789.87866257154" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <CoreNodeModels.Watch guid="6b07a96b-50ab-402f-baab-4af06f1d5c96" type="CoreNodeModels.Watch" nickname="Watch" x="2494.60610732869" y="-384.160923622306" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <CoreNodeModels.Watch guid="d9cfd2af-8f41-4eba-bb4b-3753ca3d9e0a" type="CoreNodeModels.Watch" nickname="Watch" x="1801.36548883413" y="-377.713285813607" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <PythonNodeModels.PythonNode guid="30e728a8-1092-45aa-ae25-2249c0d5053d" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1665.13875293187" y="637.768621659053" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="2">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeegrasshopper.radiance.properties import RadianceProperties
    from honeybeegrasshopper.wrapper import Wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")


_material_ = IN[1]
radProp = RadianceProperties(_material_.unwrap(), True) if _material_ else RadianceProperties()

OUT = Wrapper(radProp)</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1961.6503654983" y="425.679150554131" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="6">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeegrasshopper.hbsurface import HBSurface
    from honeybeegrasshopper.wrapper import Wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")

from uuid import uuid4

# create list from inputs if it's not a list
_geo, name_, _type_, radProp_, epProp_ = IN[1:]

if _geo:
    
    # this is not good practice. I need to find a better generic solution for
    # dynamo inputs
    for count, inp in enumerate(IN):
        if not hasattr(inp, '__iter__'):
            IN[count] = [inp]
    
    _geos, names_, _types_, radProps_, epProps_ = IN[1:]
    
    HBSrfs = range(len(_geos))
    
    for count, _geo in enumerate(_geos):
        try:
            name_ = names_[count]
        except IndexError:
            name_ = names_[0] + "_{}".format(count)
        
        isNameSetByUser = True
        if not name_:
            name_ = "Surface_%s" % uuid4()
            isNameSetByUser = False
        
        try:
            _type_ = _types_[count]
        except IndexError:
            _type_ = _types_[0]
    
        isTypeSetByUser = True
        if not _type_:
            isTypeSetByUser = False

        try:
            radProp_ = radProps_[count]
        except IndexError:
            radProp_ = radProps_[0]
            
        radProp_ = radProp_.unwrap() if radProp_ else None

        try:
            epProp_ = epProps_[count]
        except IndexError:
            epProp_ = epProps_[0]
            
        epProp_ = epProp_.unwrap() if epProp_ else None
    
        HBSrf = HBSurface(name_, _geo, _type_, isNameSetByUser, isTypeSetByUser,
                          radProp_, epProp_)
    
        HBSrfs[count] = Wrapper(HBSrf)

    
    OUT = HBSrfs</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="4256d3b4-e752-4659-a4c2-f7588e692792" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1644.74680121287" y="482.554514133321" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="&quot;glass_wall&quot;;" ShouldFocus="false" />
    <CoreNodeModels.Watch guid="1b507eac-892f-48cd-9521-db3505b797fa" type="CoreNodeModels.Watch" nickname="Watch" x="1843.82317852312" y="773.04182464394" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <PythonNodeModels.PythonNode guid="ba3dca4f-8406-4a58-ae20-f51c53be632a" type="PythonNodeModels.PythonNode" nickname="Python Script" x="2824.16404633913" y="-73.7901953394821" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="7">
      <Script>import sys
sys.path.extend(IN[0])


_recipe, _HBObjs, _folder_, _name_, _write, run_ = IN[1:]

if _HBObjs and _recipe and _write:
    try:
        _HBObjs = [objs.unwrap() for objs in _HBObjs]
    except AttributeError:
        raise AttributeError(" At least one of the inputs in _HBObjs is not a valid Honeybee object.")
   
    try:
       _recipe= _recipe.unwrap()
    except AttributeError:
        raise AttributeError(" Can't read the analysis recipe.")

    if _write:
        # Add Honeybee objects to the recipe
        _recipe.hbObjects = _HBObjs
        try:
            _recipe.writeToFile(_folder_, _name_)
        except AttributeError:
            raise ValueError(" Expected a recipe not a %s" % type(_recipe))

    if _write and run_:
        OUT = _recipe.run(False)</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.BoolSelector guid="a2d8174f-b3ea-47e9-b382-446b165d915a" type="CoreNodeModels.Input.BoolSelector" nickname="Boolean" x="2502.49767363497" y="108.057048494263" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Boolean>True</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
    <CoreNodeModels.Watch guid="7eda6215-3ab3-4df6-b2b7-d213ff2291c9" type="CoreNodeModels.Watch" nickname="Watch" x="3065.80842754192" y="-75.23864101554" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="5655de16-8df7-441e-b5f9-bdbe6c8b1198" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2499.34357950398" y="16.7379939366418" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="&quot;c:\ladybug&quot;;&#xA;&quot;untitled1&quot;;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="e64f82a6-ab66-41ee-9ffa-71ad8694a3b3" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1965.92006863023" y="173.54370533618" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="6">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeegrasshopper.hbsurface import HBSurface
    from honeybeegrasshopper.wrapper import Wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")

from uuid import uuid4

# create list from inputs if it's not a list
_geo, name_, _type_, radProp_, epProp_ = IN[1:]

if _geo:
    
    # this is not good practice. I need to find a better generic solution for
    # dynamo inputs
    for count, inp in enumerate(IN):
        if not hasattr(inp, '__iter__'):
            IN[count] = [inp]
    
    _geos, names_, _types_, radProps_, epProps_ = IN[1:]
    
    HBSrfs = range(len(_geos))
    
    for count, _geo in enumerate(_geos):
        try:
            name_ = names_[count]
        except IndexError:
            name_ = names_[0] + "_{}".format(count)
        
        isNameSetByUser = True
        if not name_:
            name_ = "Surface_%s" % uuid4()
            isNameSetByUser = False
        
        try:
            _type_ = _types_[count]
        except IndexError:
            _type_ = _types_[0]
    
        isTypeSetByUser = True
        if not _type_:
            isTypeSetByUser = False

        try:
            radProp_ = radProps_[count]
        except IndexError:
            radProp_ = radProps_[0]
            
        radProp_ = radProp_.unwrap() if radProp_ else None

        try:
            epProp_ = epProps_[count]
        except IndexError:
            epProp_ = epProps_[0]
            
        epProp_ = epProp_.unwrap() if epProp_ else None
    
        HBSrf = HBSurface(name_, _geo, _type_, isNameSetByUser, isTypeSetByUser,
                          radProp_, epProp_)
    
        HBSrfs[count] = Wrapper(HBSrf)

    
    OUT = HBSrfs</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.CreateList guid="0f4001dc-b13b-456c-9e7a-e732a169ad0f" type="CoreNodeModels.CreateList" nickname="List.Create" x="2197.15629444112" y="231.908226077718" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="2" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="633bca5a-879a-4879-88c9-bfc0410bfdd8" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="2355.33984589714" y="231.351788048574" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Cuboid.ByLengths" x="758.345903407444" y="-207.413747928578" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Cuboid.ByLengths@Autodesk.DesignScript.Geometry.Point,double,double,double">
      <PortInfo index="0" default="True" />
      <PortInfo index="1" default="True" />
      <PortInfo index="2" default="True" />
      <PortInfo index="3" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="39052f84-0fe5-4cfd-9413-e0e0e19da907" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Point.ByCoordinates" x="514.644212112965" y="-213.553397186315" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double">
      <PortInfo index="0" default="True" />
      <PortInfo index="1" default="True" />
      <PortInfo index="2" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="7722101a-d9f9-4e05-92e3-0eee02555262" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="344.840855876487" y="-196.575909266413" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="x/2;&#xA;y/2;&#xA;z/2;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="6c29d93d-7aa9-4be4-bd88-98a37067ceca" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="198.995269349592" y="-176.709389221495" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="9;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="93202991-1f39-4168-91e6-af35e45dd3f9" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1597" y="-114" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="x[0];" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="52089f64-5b0f-403c-8067-e497902ce696" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1786.99623864916" y="231.736811569591" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="&quot;opaque&quot;;" ShouldFocus="false" />
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="7e6ef32f-0181-43fa-916c-913d9b63467f" start_index="0" end="d51848e8-6663-4eaf-a5f1-f164de9dec9f" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7e6ef32f-0181-43fa-916c-913d9b63467f" start_index="0" end="d9cfd2af-8f41-4eba-bb4b-3753ca3d9e0a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="742a7dd0-7f5d-4df8-a562-50495a4d41ae" start_index="0" end="7e6ef32f-0181-43fa-916c-913d9b63467f" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="7e6ef32f-0181-43fa-916c-913d9b63467f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="30e728a8-1092-45aa-ae25-2249c0d5053d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="68dfd842-2fca-4d0a-a880-1374da132baf" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="e64f82a6-ab66-41ee-9ffa-71ad8694a3b3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="d51848e8-6663-4eaf-a5f1-f164de9dec9f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" start_index="0" end="d51848e8-6663-4eaf-a5f1-f164de9dec9f" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" start_index="0" end="db482029-a1e5-4167-b16f-f3dc28417864" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3b0b27bb-a80c-40ed-81c1-0e6e47f958f8" start_index="0" end="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d51848e8-6663-4eaf-a5f1-f164de9dec9f" start_index="0" end="6b07a96b-50ab-402f-baab-4af06f1d5c96" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d51848e8-6663-4eaf-a5f1-f164de9dec9f" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f93e6b68-5605-4dfe-9062-8306a522a2ca" start_index="0" end="d51848e8-6663-4eaf-a5f1-f164de9dec9f" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f93e6b68-5605-4dfe-9062-8306a522a2ca" start_index="0" end="93202991-1f39-4168-91e6-af35e45dd3f9" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f93e6b68-5605-4dfe-9062-8306a522a2ca" start_index="1" end="d51848e8-6663-4eaf-a5f1-f164de9dec9f" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="fd8d015c-f8f9-4c05-a4b4-596135f301f6" start_index="0" end="e702b3e5-d7ce-4220-a665-9f783bb961f0" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="fd8d015c-f8f9-4c05-a4b4-596135f301f6" start_index="0" end="8d25a3fa-1ea5-494d-ba86-80793a925f42" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="366e171e-fe59-4bbd-9c17-a4f5e9cfff55" start_index="0" end="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="366e171e-fe59-4bbd-9c17-a4f5e9cfff55" start_index="0" end="7722101a-d9f9-4e05-92e3-0eee02555262" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6ea5fbd7-6a71-4fbc-9b3b-b942d8f7ceff" start_index="0" end="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6ea5fbd7-6a71-4fbc-9b3b-b942d8f7ceff" start_index="0" end="7722101a-d9f9-4e05-92e3-0eee02555262" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e8c06d3d-7e0d-45e0-b0c0-1175a6cc299b" start_index="0" end="f93e6b68-5605-4dfe-9062-8306a522a2ca" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e702b3e5-d7ce-4220-a665-9f783bb961f0" start_index="0" end="f93e6b68-5605-4dfe-9062-8306a522a2ca" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8d25a3fa-1ea5-494d-ba86-80793a925f42" start_index="0" end="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8d25a3fa-1ea5-494d-ba86-80793a925f42" start_index="1" end="e64f82a6-ab66-41ee-9ffa-71ad8694a3b3" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="849047e4-cbe3-41d6-9bd4-fbadc1959da7" start_index="0" end="68dfd842-2fca-4d0a-a880-1374da132baf" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="849047e4-cbe3-41d6-9bd4-fbadc1959da7" start_index="1" end="68dfd842-2fca-4d0a-a880-1374da132baf" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="68dfd842-2fca-4d0a-a880-1374da132baf" start_index="0" end="bf50bdad-75cd-4cd6-b151-3f1073797251" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="68dfd842-2fca-4d0a-a880-1374da132baf" start_index="0" end="30e728a8-1092-45aa-ae25-2249c0d5053d" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="30e728a8-1092-45aa-ae25-2249c0d5053d" start_index="0" end="1b507eac-892f-48cd-9521-db3505b797fa" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="30e728a8-1092-45aa-ae25-2249c0d5053d" start_index="0" end="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" start_index="0" end="0f4001dc-b13b-456c-9e7a-e732a169ad0f" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="4256d3b4-e752-4659-a4c2-f7588e692792" start_index="0" end="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ba3dca4f-8406-4a58-ae20-f51c53be632a" start_index="0" end="7eda6215-3ab3-4df6-b2b7-d213ff2291c9" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a2d8174f-b3ea-47e9-b382-446b165d915a" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="5" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a2d8174f-b3ea-47e9-b382-446b165d915a" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="6" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5655de16-8df7-441e-b5f9-bdbe6c8b1198" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5655de16-8df7-441e-b5f9-bdbe6c8b1198" start_index="1" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e64f82a6-ab66-41ee-9ffa-71ad8694a3b3" start_index="0" end="0f4001dc-b13b-456c-9e7a-e732a169ad0f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0f4001dc-b13b-456c-9e7a-e732a169ad0f" start_index="0" end="633bca5a-879a-4879-88c9-bfc0410bfdd8" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="633bca5a-879a-4879-88c9-bfc0410bfdd8" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" start_index="0" end="fd8d015c-f8f9-4c05-a4b4-596135f301f6" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="39052f84-0fe5-4cfd-9413-e0e0e19da907" start_index="0" end="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7722101a-d9f9-4e05-92e3-0eee02555262" start_index="0" end="39052f84-0fe5-4cfd-9413-e0e0e19da907" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7722101a-d9f9-4e05-92e3-0eee02555262" start_index="1" end="39052f84-0fe5-4cfd-9413-e0e0e19da907" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7722101a-d9f9-4e05-92e3-0eee02555262" start_index="2" end="39052f84-0fe5-4cfd-9413-e0e0e19da907" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6c29d93d-7aa9-4be4-bd88-98a37067ceca" start_index="0" end="7722101a-d9f9-4e05-92e3-0eee02555262" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6c29d93d-7aa9-4be4-bd88-98a37067ceca" start_index="0" end="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="52089f64-5b0f-403c-8067-e497902ce696" start_index="0" end="e64f82a6-ab66-41ee-9ffa-71ad8694a3b3" end_index="2" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="cf8acee1-243c-49db-a018-2b410b603388" text="Take care of flattening points!" x="2260.48972024291" y="-383.592420978647" />
  </Notes>
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="8caf77ab-5ea5-4b0e-a81e-68d7ab8f9b92" annotationText="generate sky" left="1591.55328649509" top="-283.377701733651" width="144" height="149" fontSize="14" InitialTop="-253.377701733651" InitialHeight="149" TextblockHeight="20" backgrouund="#FFC1D676">
      <Models ModelGuid="7e6ef32f-0181-43fa-916c-913d9b63467f" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="e59fddb7-8303-4268-9908-0c710016d14b" annotationText="Radiance Parameters" left="1574.58632572478" top="162.368150066834" width="144" height="149" fontSize="14" InitialTop="192.368150066834" InitialHeight="149" TextblockHeight="20" backgrouund="#FFFFAA45">
      <Models ModelGuid="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="7a50e78f-e762-4d14-b90a-7805b1312ff1" annotationText="analysis recipe" left="2273.82901332794" top="-333.836383258501" width="144" height="227" fontSize="14" InitialTop="-303.836383258501" InitialHeight="149" TextblockHeight="20" backgrouund="#FFFFAA45">
      <Models ModelGuid="d51848e8-6663-4eaf-a5f1-f164de9dec9f" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="f9265f1e-2de7-4597-ab4b-12866b8cd0e2" annotationText="Glass Materials" left="1254.52947964038" top="635.307742546112" width="144" height="175" fontSize="14" InitialTop="665.307742546112" InitialHeight="149" TextblockHeight="20" backgrouund="#FFFFAA45">
      <Models ModelGuid="68dfd842-2fca-4d0a-a880-1374da132baf" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="e60eb519-61c5-4739-bc1f-880ee139233b" annotationText="Honeybee Surface" left="1951.6503654983" top="395.679150554131" width="144" height="253" fontSize="14" InitialTop="425.679150554131" InitialHeight="253" TextblockHeight="20" backgrouund="#FFC1D676">
      <Models ModelGuid="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="ce8a620f-d757-435c-8bdb-30a1adc24ba5" annotationText="runDaylightAnalysis" left="2814.16404633913" top="-103.790195339482" width="144" height="279" fontSize="14" InitialTop="-73.7901953394821" InitialHeight="227" TextblockHeight="20" backgrouund="#FF48B9FF">
      <Models ModelGuid="ba3dca4f-8406-4a58-ae20-f51c53be632a" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="e0f74d54-9999-40c0-92d1-5596d1ebb71f" annotationText="I assume there is a better way to merge lists that I'm not aware of!" left="2187.15629444112" top="187.351788048574" width="287.18355145602" height="163.556438029144" fontSize="14" InitialTop="231.351788048574" InitialHeight="151.658547083294" TextblockHeight="34" backgrouund="#FFC1D676">
      <Models ModelGuid="0f4001dc-b13b-456c-9e7a-e732a169ad0f" />
      <Models ModelGuid="633bca5a-879a-4879-88c9-bfc0410bfdd8" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="18.6560353348752" eyeY="10.1417114807789" eyeZ="15.1580315318677" lookX="-21.3592862198849" lookY="-5.51057744757582" lookZ="-25.6265412059399" upX="0.0335082063567515" upY="0.998629511697301" upZ="0.040202623811367" />
  </Cameras>
</Workspace>