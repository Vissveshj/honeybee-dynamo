<Workspace Version="0.9.2.4472" X="-1502.13903016469" Y="644.270502346813" zoom="0.680021921342289" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap>
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <PythonNodeModels.PythonNode guid="7e6ef32f-0181-43fa-916c-913d9b63467f" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1601.55328649509" y="-253.377701733651" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="2">
      <Script>import sys
sys.path.extend(IN[0])

try:
	from honeybeex.radiance.sky.certainIlluminance import SkyWithCertainIlluminanceLevel
	from honeybeex.wrapper import Wrapper
except ImportError as e:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component:\n%s"%e)

_illuminanceValue = IN[1]
if _illuminanceValue:
    OUT = Wrapper(SkyWithCertainIlluminanceLevel(_illuminanceValue))</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="742a7dd0-7f5d-4df8-a562-50495a4d41ae" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1413.25966650777" y="-212.632997144281" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="10000;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="7bcebefb-186b-42a0-a778-6b8d72385d35" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-289.386279117687" y="-353.23488865836" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="{&quot;C:\\Users\\Administrator\\Documents\\GitHub\\honeybeex&quot;,&#xA;&quot;C:\Program Files (x86)\IronPython 2.7\Lib&quot;};" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1584.58632572478" y="192.368150066834" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="2">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeex.radiance.parameters.gridbased import GridBasedParameters
    from honeybeex import wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")

_quality = IN[1]
if _quality is not None:
    radParameters = GridBasedParameters(_quality)
 
    #wrap the object
    OUT = wrapper.Wrapper(radParameters)</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="3b0b27bb-a80c-40ed-81c1-0e6e47f958f8" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1411.408342375" y="225.302015132197" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="0;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="d51848e8-6663-4eaf-a5f1-f164de9dec9f" type="PythonNodeModels.PythonNode" nickname="Analysis Recipe" x="2283.82901332794" y="-303.836383258501" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="6">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeex.radiance.recipe.gridbased import GridBasedAnalysisRecipe
    from honeybeex import wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")


_HBSky, _testPoints, ptsVectors_, _simType, _radParameters_ = IN[1:]

if _HBSky and _testPoints and ptsVectors_:
    if _radParameters_:
        _radParameters_ = _radParameters_.unwrap()
    
    analysisRecipe = GridBasedAnalysisRecipe(
        _HBSky.unwrap(), _testPoints, ptsVectors_, _simType, _radParameters_
        )
    
    OUT = wrapper.Wrapper(analysisRecipe)</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="f93e6b68-5605-4dfe-9062-8306a522a2ca" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="Generate Test Points" x="1337.67094935627" y="-36.8165925593222" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false">
      <PortInfo index="1" default="True" />
      <PortInfo index="2" default="True" />
      <ID value="3bb214f8-59b8-4ce8-969b-e42d4d05414e" />
      <Name value="Generate Test Points" />
      <Description value="Generate test points from a surface based on number of segments and distance from the surface" />
      <Inputs>
        <Input value="_testSurfaces" />
        <Input value="_numOfSegments_" />
        <Input value="_disFromSurface_" />
      </Inputs>
      <Outputs>
        <Output value="testPts" />
        <Output value="ptsNormal" />
        <Output value="ERRReport" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="fd8d015c-f8f9-4c05-a4b4-596135f301f6" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Geometry.Explode" x="342.044938927823" y="-202.194264359505" isVisible="false" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Geometry.Explode" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="366e171e-fe59-4bbd-9c17-a4f5e9cfff55" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-400.306046701541" y="-268.952041937902" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="13;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="6ea5fbd7-6a71-4fbc-9b3b-b942d8f7ceff" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-402.120289842972" y="-93.9744320441475" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="5;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="e8c06d3d-7e0d-45e0-b0c0-1175a6cc299b" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1201.50108247441" y="27.8752596422953" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="0.762;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="e702b3e5-d7ce-4220-a665-9f783bb961f0" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="556.156893791924" y="-197.545083555679" isVisible="false" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="x[1];" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="8d25a3fa-1ea5-494d-ba86-80793a925f42" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1262.01188015998" y="345.609215035166" isVisible="false" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="x[2];&#xA;List.RemoveItemAtIndex(x, 2);" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="849047e4-cbe3-41d6-9bd4-fbadc1959da7" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1012.31201382626" y="695.977386241156" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="&quot;g_material&quot;;&#xA;0.65;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="68dfd842-2fca-4d0a-a880-1374da132baf" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1264.52947964038" y="665.307742546112" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="3">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeex.radiance.material.glass import GlassMaterial
    from honeybeex.wrapper import Wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")



_name, _TVis = IN[1:]

if _name and _TVis:
    material = GlassMaterial.bySingleTransValue(_name, _TVis)
    
    OUT = Wrapper(material)</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Watch guid="db482029-a1e5-4167-b16f-f3dc28417864" type="CoreNodeModels.Watch" nickname="Watch" x="1759.46391862372" y="-41.8526614902166" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <CoreNodeModels.Watch guid="bf50bdad-75cd-4cd6-b151-3f1073797251" type="CoreNodeModels.Watch" nickname="Watch" x="1465.34697393625" y="789.87866257154" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <CoreNodeModels.Watch guid="6b07a96b-50ab-402f-baab-4af06f1d5c96" type="CoreNodeModels.Watch" nickname="Watch" x="2527.40619103736" y="-394.410425214539" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <CoreNodeModels.Watch guid="d9cfd2af-8f41-4eba-bb4b-3753ca3d9e0a" type="CoreNodeModels.Watch" nickname="Watch" x="1801.36548883413" y="-377.713285813607" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <PythonNodeModels.PythonNode guid="30e728a8-1092-45aa-ae25-2249c0d5053d" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1665.13875293187" y="637.768621659053" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="2">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeex.radiance.properties import RadianceProperties
    from honeybeex.wrapper import Wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")


_material_ = IN[1]
radProp = RadianceProperties(_material_.unwrap(), True) if _material_ else RadianceProperties()

OUT = Wrapper(radProp)</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1961.6503654983" y="425.679150554131" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="6">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeex.hbsurface import HBSurface
    from honeybeex.wrapper import Wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")

from uuid import uuid4

# create list from inputs if it's not a list
_geo, name_, _type_, radProp_, epProp_ = IN[1:]

if _geo:
    
    # this is not good practice. I need to find a better generic solution for
    # dynamo inputs
    for count, inp in enumerate(IN):
        if not hasattr(inp, '__iter__'):
            IN[count] = [inp]
    
    _geos, names_, _types_, radProps_, epProps_ = IN[1:]
    
    HBSrfs = range(len(_geos))
    
    for count, _geo in enumerate(_geos):
        try:
            name_ = names_[count]
        except IndexError:
            name_ = names_[0] + "_{}".format(count)
        
        isNameSetByUser = True
        if not name_:
            name_ = "Surface_%s" % uuid4()
            isNameSetByUser = False
        
        try:
            _type_ = _types_[count]
        except IndexError:
            _type_ = _types_[0]
    
        isTypeSetByUser = True
        if not _type_:
            isTypeSetByUser = False

        try:
            radProp_ = radProps_[count]
        except IndexError:
            radProp_ = radProps_[0]
            
        radProp_ = radProp_.unwrap() if radProp_ else None

        try:
            epProp_ = epProps_[count]
        except IndexError:
            epProp_ = epProps_[0]
            
        epProp_ = epProp_.unwrap() if epProp_ else None
    
        HBSrf = HBSurface(name_, _geo, _type_, isNameSetByUser, isTypeSetByUser,
                          radProp_, epProp_)
    
        HBSrfs[count] = Wrapper(HBSrf)

    
    OUT = HBSrfs</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="4256d3b4-e752-4659-a4c2-f7588e692792" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1703.41973159991" y="476.088277696038" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="&quot;glass_wall&quot;;" ShouldFocus="false" />
    <CoreNodeModels.Watch guid="1b507eac-892f-48cd-9521-db3505b797fa" type="CoreNodeModels.Watch" nickname="Watch" x="1843.82317852312" y="773.04182464394" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <PythonNodeModels.PythonNode guid="ba3dca4f-8406-4a58-ae20-f51c53be632a" type="PythonNodeModels.PythonNode" nickname="Python Script" x="2825.92019841905" y="-80.7297780719105" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="7">
      <Script>import sys
sys.path.extend(IN[0])
import time

_recipe, _HBObjs, _folder_, _name_, _write, run_ = IN[1:]

if _HBObjs and _recipe and _write:
    try:
        _HBObjs = [objs.unwrap() for objs in _HBObjs]
    except AttributeError:
        raise AttributeError(" At least one of the inputs in _HBObjs is not a valid Honeybee object.")
   
    try:
       _recipe= _recipe.unwrap()
    except AttributeError:
        raise AttributeError(" Can't read the analysis recipe.")

    if _write:
        # Add Honeybee objects to the recipe
        _recipe.hbObjects = _HBObjs
        # try:
        _recipe.writeToFile(_folder_, _name_)
        # except AttributeError, e:
        #     raise ValueError(" Expected a recipe not a %s:\n%s" % (type(_recipe), str(e)))

    if _write and run_:
        if _recipe.run(False):
        	OUT = _recipe.results()</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.BoolSelector guid="a2d8174f-b3ea-47e9-b382-446b165d915a" type="CoreNodeModels.Input.BoolSelector" nickname="Boolean" x="2500.10392326115" y="112.844549241907" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Boolean>True</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="5655de16-8df7-441e-b5f9-bdbe6c8b1198" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2499.34357950398" y="16.7379939366418" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="&quot;c:\ladybug&quot;;&#xA;&quot;untitled2&quot;;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="e64f82a6-ab66-41ee-9ffa-71ad8694a3b3" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1964.69206394005" y="102.319433305625" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="6">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeex.hbsurface import HBSurface
    from honeybeex.wrapper import Wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")

from uuid import uuid4

# create list from inputs if it's not a list
_geo, name_, _type_, radProp_, epProp_ = IN[1:]

if _geo:
    
    # this is not good practice. I need to find a better generic solution for
    # dynamo inputs
    for count, inp in enumerate(IN):
        if not hasattr(inp, '__iter__'):
            IN[count] = [inp]
    
    _geos, names_, _types_, radProps_, epProps_ = IN[1:]
    
    HBSrfs = range(len(_geos))
    
    for count, _geo in enumerate(_geos):
        try:
            name_ = names_[count]
        except IndexError:
            name_ = names_[0] + "_{}".format(count)
        
        isNameSetByUser = True
        if not name_:
            name_ = "Surface_%s" % uuid4()
            isNameSetByUser = False
        
        try:
            _type_ = _types_[count]
        except IndexError:
            _type_ = _types_[0]
    
        isTypeSetByUser = True
        if not _type_:
            isTypeSetByUser = False

        try:
            radProp_ = radProps_[count]
        except IndexError:
            radProp_ = radProps_[0]
            
        radProp_ = radProp_.unwrap() if radProp_ else None

        try:
            epProp_ = epProps_[count]
        except IndexError:
            epProp_ = epProps_[0]
            
        epProp_ = epProp_.unwrap() if epProp_ else None
    
        HBSrf = HBSurface(name_, _geo, _type_, isNameSetByUser, isTypeSetByUser,
                          radProp_, epProp_)
    
        HBSrfs[count] = Wrapper(HBSrf)

    
    OUT = HBSrfs</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.CreateList guid="0f4001dc-b13b-456c-9e7a-e732a169ad0f" type="CoreNodeModels.CreateList" nickname="List.Create" x="2197.15629444112" y="231.908226077718" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="2" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="633bca5a-879a-4879-88c9-bfc0410bfdd8" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="2355.33984589714" y="231.351788048574" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Cuboid.ByLengths" x="156.735709628619" y="-212.555715396773" isVisible="false" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Cuboid.ByLengths@Autodesk.DesignScript.Geometry.Point,double,double,double">
      <PortInfo index="0" default="True" />
      <PortInfo index="1" default="True" />
      <PortInfo index="2" default="True" />
      <PortInfo index="3" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="39052f84-0fe5-4cfd-9413-e0e0e19da907" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Point.ByCoordinates" x="-86.9659816658597" y="-218.69536465451" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double">
      <PortInfo index="0" default="True" />
      <PortInfo index="1" default="True" />
      <PortInfo index="2" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="7722101a-d9f9-4e05-92e3-0eee02555262" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-256.769337902338" y="-201.717876734608" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="x/2;&#xA;y/2;&#xA;z/2;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="6c29d93d-7aa9-4be4-bd88-98a37067ceca" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-402.614924429233" y="-181.85135668969" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="9;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="52089f64-5b0f-403c-8067-e497902ce696" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1786.99623864916" y="231.736811569591" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="&quot;opaque&quot;;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="32656379-ddd5-4983-8a8c-138561ca2298" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Geometry.Scale" x="1081.00012098977" y="-174.722266949937" isVisible="false" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Geometry.Scale@Autodesk.DesignScript.Geometry.Plane,double,double,double">
      <PortInfo index="2" default="True" />
      <PortInfo index="3" default="True" />
      <PortInfo index="4" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="12ae3471-779a-4e02-a970-e41c58d35834" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="933.450597644353" y="-99.7407036056749" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="0.98;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="ab750481-0bdb-456b-a691-c2a4db922146" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Plane.ByOriginNormal" x="899.039375345176" y="-328.276069644516" isVisible="false" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Plane.ByOriginNormal@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector">
      <PortInfo index="0" default="True" />
      <PortInfo index="1" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="2400ccea-0a65-49f7-91da-8b6960580cfe" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Surface.PointAtParameter" x="657.487635480261" y="-330.451670784458" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Surface.PointAtParameter@double,double">
      <PortInfo index="1" default="True" />
      <PortInfo index="2" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="d84e7bfe-b398-4d5f-b65d-556807e1d1f5" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="507.29310534818" y="-300.710477663405" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="0.5;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="1ce1e453-a710-4c69-8c9d-92ce026d48cd" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="987.28143545589" y="-7.89086580454398" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="12;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="a00eac2d-9442-4f0e-be80-ebfaab0b2470" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2102.74734000486" y="-202.428792105892" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="0;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="1c7fb340-9e53-4178-9502-c08d46305ab5" type="PythonNodeModels.PythonNode" nickname="UnflattenList" x="3063.82903006584" y="-37.9221069673515" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="2">
      <Script>def unflatten(guide, flattenedInput):
    """Unflatten a falttened generator
        guide: A guide list to follow the structure
        falttenedInput: A flattened iterator object

        Usage:
            guide = [["a"], ["b","c","d"], [["e"]], ["f"]]
            inputList = [0, 1, 2, 3, 4, 5, 6, 7]
            unflatten(guide, iter(inputList))
            &gt;&gt; [[0], [1, 2, 3], [[4]], [5]]
    """
    if isinstance(flattenedInput, list):
    	flattenedInput = iter(flattenedInput)
    	
    return [unflatten(subList, flattenedInput) if isinstance(subList, list) else next(flattenedInput) for subList in guide]


OUT = unflatten(*IN)</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="71e532ae-3735-4c30-b1d3-94b11104fbd1" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="Color Surface" x="3318.58028387992" y="-156.677947864776" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false">
      <PortInfo index="2" default="True" />
      <ID value="d3408aa8-7ebe-40b5-8754-ae621b6d9647" />
      <Name value="Color Surface" />
      <Description value="Color a test surface based on the results of a study. The results structure should match the test points structure to be mapped correctly on the surface." />
      <Inputs>
        <Input value="_analysisSurfaces" />
        <Input value="_values" />
        <Input value="_legendPar_" />
      </Inputs>
      <Outputs>
        <Output value="Display" />
        <Output value="ERRReport" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
    <CoreNodeModels.Watch guid="89ab244e-930f-4bcb-a4d4-903ccf65f06c" type="CoreNodeModels.Watch" nickname="Watch" x="2292.0752439664" y="471.760749529016" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <CoreNodeModels.Input.BoolSelector guid="62bdcf3b-5461-43c2-acc1-aa64a8fb121c" type="CoreNodeModels.Input.BoolSelector" nickname="Boolean" x="2513.60688134568" y="188.679437002126" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Boolean>True</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
    <PythonNodeModels.PythonNode guid="6dec3861-cb36-450a-88c7-60a6df8d0e4a" type="PythonNodeModels.PythonNode" nickname="Analysis Recipe" x="2287.3233581849" y="-821.096814609149" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="6">
      <Script>import sys
sys.path.extend(IN[0])

try:
    from honeybeex.radiance.recipe.sunlighthours import SunlightHoursAnalysisRecipe
    from honeybeex import wrapper
except ImportError:
    raise ImportError("Failed to import Honeybee libraries.\n" + \
                      "Set-up path to Honeybee libraries in honeybee_honeybee component")


_sunVectors, _testPoints, ptsVectors_, _timestep_, _ad_ = IN[1:]

if _sunVectors and _testPoints and ptsVectors_:
    
    analysisRecipe = SunlightHoursAnalysisRecipe(_sunVectors,
        _testPoints, ptsVectors_, _timestep_, _ad_
        )
    
    OUT = wrapper.Wrapper(analysisRecipe)</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="a3a70728-6e36-4f33-b35c-7fa2c22d6bb8" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2112.3771661699" y="-701.183976301296" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="1;&#xA;1000;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="bff17c28-dcc0-4cd6-81cb-66a2a8723522" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1487.63179704363" y="-996.142011264782" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="{{-0.810513, 0.579652, -0.084093}, {-0.67166, 0.702357, -0.235729},&#xA;                           {-0.487065, 0.798284, -0.354275}, {-0.269301, 0.8609, -0.431657},&#xA;                           {-0.033196, 0.885943, -0.462605}, {0.20517, 0.871705, -0.445013},&#xA;                           {0.429563, 0.819156, -0.380077}, {0.624703, 0.731875, -0.272221},&#xA;                           {0.777301, 0.615806, -0.128788}};" ShouldFocus="false" />
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="7e6ef32f-0181-43fa-916c-913d9b63467f" start_index="0" end="d9cfd2af-8f41-4eba-bb4b-3753ca3d9e0a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7e6ef32f-0181-43fa-916c-913d9b63467f" start_index="0" end="d51848e8-6663-4eaf-a5f1-f164de9dec9f" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="742a7dd0-7f5d-4df8-a562-50495a4d41ae" start_index="0" end="7e6ef32f-0181-43fa-916c-913d9b63467f" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="7e6ef32f-0181-43fa-916c-913d9b63467f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="30e728a8-1092-45aa-ae25-2249c0d5053d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="68dfd842-2fca-4d0a-a880-1374da132baf" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="e64f82a6-ab66-41ee-9ffa-71ad8694a3b3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="d51848e8-6663-4eaf-a5f1-f164de9dec9f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bcebefb-186b-42a0-a778-6b8d72385d35" start_index="0" end="6dec3861-cb36-450a-88c7-60a6df8d0e4a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" start_index="0" end="db482029-a1e5-4167-b16f-f3dc28417864" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" start_index="0" end="d51848e8-6663-4eaf-a5f1-f164de9dec9f" end_index="5" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3b0b27bb-a80c-40ed-81c1-0e6e47f958f8" start_index="0" end="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d51848e8-6663-4eaf-a5f1-f164de9dec9f" start_index="0" end="6b07a96b-50ab-402f-baab-4af06f1d5c96" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f93e6b68-5605-4dfe-9062-8306a522a2ca" start_index="0" end="d51848e8-6663-4eaf-a5f1-f164de9dec9f" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f93e6b68-5605-4dfe-9062-8306a522a2ca" start_index="0" end="1c7fb340-9e53-4178-9502-c08d46305ab5" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f93e6b68-5605-4dfe-9062-8306a522a2ca" start_index="0" end="6dec3861-cb36-450a-88c7-60a6df8d0e4a" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f93e6b68-5605-4dfe-9062-8306a522a2ca" start_index="1" end="d51848e8-6663-4eaf-a5f1-f164de9dec9f" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f93e6b68-5605-4dfe-9062-8306a522a2ca" start_index="1" end="6dec3861-cb36-450a-88c7-60a6df8d0e4a" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="fd8d015c-f8f9-4c05-a4b4-596135f301f6" start_index="0" end="e702b3e5-d7ce-4220-a665-9f783bb961f0" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="fd8d015c-f8f9-4c05-a4b4-596135f301f6" start_index="0" end="8d25a3fa-1ea5-494d-ba86-80793a925f42" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="366e171e-fe59-4bbd-9c17-a4f5e9cfff55" start_index="0" end="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="366e171e-fe59-4bbd-9c17-a4f5e9cfff55" start_index="0" end="7722101a-d9f9-4e05-92e3-0eee02555262" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6ea5fbd7-6a71-4fbc-9b3b-b942d8f7ceff" start_index="0" end="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6ea5fbd7-6a71-4fbc-9b3b-b942d8f7ceff" start_index="0" end="7722101a-d9f9-4e05-92e3-0eee02555262" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e8c06d3d-7e0d-45e0-b0c0-1175a6cc299b" start_index="0" end="f93e6b68-5605-4dfe-9062-8306a522a2ca" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e702b3e5-d7ce-4220-a665-9f783bb961f0" start_index="0" end="32656379-ddd5-4983-8a8c-138561ca2298" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e702b3e5-d7ce-4220-a665-9f783bb961f0" start_index="0" end="2400ccea-0a65-49f7-91da-8b6960580cfe" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8d25a3fa-1ea5-494d-ba86-80793a925f42" start_index="0" end="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8d25a3fa-1ea5-494d-ba86-80793a925f42" start_index="1" end="e64f82a6-ab66-41ee-9ffa-71ad8694a3b3" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="849047e4-cbe3-41d6-9bd4-fbadc1959da7" start_index="0" end="68dfd842-2fca-4d0a-a880-1374da132baf" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="849047e4-cbe3-41d6-9bd4-fbadc1959da7" start_index="1" end="68dfd842-2fca-4d0a-a880-1374da132baf" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="68dfd842-2fca-4d0a-a880-1374da132baf" start_index="0" end="bf50bdad-75cd-4cd6-b151-3f1073797251" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="68dfd842-2fca-4d0a-a880-1374da132baf" start_index="0" end="30e728a8-1092-45aa-ae25-2249c0d5053d" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="30e728a8-1092-45aa-ae25-2249c0d5053d" start_index="0" end="1b507eac-892f-48cd-9521-db3505b797fa" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="30e728a8-1092-45aa-ae25-2249c0d5053d" start_index="0" end="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" start_index="0" end="0f4001dc-b13b-456c-9e7a-e732a169ad0f" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" start_index="0" end="89ab244e-930f-4bcb-a4d4-903ccf65f06c" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="4256d3b4-e752-4659-a4c2-f7588e692792" start_index="0" end="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ba3dca4f-8406-4a58-ae20-f51c53be632a" start_index="0" end="1c7fb340-9e53-4178-9502-c08d46305ab5" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a2d8174f-b3ea-47e9-b382-446b165d915a" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="5" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5655de16-8df7-441e-b5f9-bdbe6c8b1198" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5655de16-8df7-441e-b5f9-bdbe6c8b1198" start_index="1" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e64f82a6-ab66-41ee-9ffa-71ad8694a3b3" start_index="0" end="0f4001dc-b13b-456c-9e7a-e732a169ad0f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0f4001dc-b13b-456c-9e7a-e732a169ad0f" start_index="0" end="633bca5a-879a-4879-88c9-bfc0410bfdd8" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="633bca5a-879a-4879-88c9-bfc0410bfdd8" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" start_index="0" end="fd8d015c-f8f9-4c05-a4b4-596135f301f6" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="39052f84-0fe5-4cfd-9413-e0e0e19da907" start_index="0" end="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7722101a-d9f9-4e05-92e3-0eee02555262" start_index="0" end="39052f84-0fe5-4cfd-9413-e0e0e19da907" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7722101a-d9f9-4e05-92e3-0eee02555262" start_index="1" end="39052f84-0fe5-4cfd-9413-e0e0e19da907" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7722101a-d9f9-4e05-92e3-0eee02555262" start_index="2" end="39052f84-0fe5-4cfd-9413-e0e0e19da907" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6c29d93d-7aa9-4be4-bd88-98a37067ceca" start_index="0" end="7722101a-d9f9-4e05-92e3-0eee02555262" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6c29d93d-7aa9-4be4-bd88-98a37067ceca" start_index="0" end="30054e9d-f8cd-4dfd-aab0-f9e11afcf71b" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="52089f64-5b0f-403c-8067-e497902ce696" start_index="0" end="e64f82a6-ab66-41ee-9ffa-71ad8694a3b3" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="32656379-ddd5-4983-8a8c-138561ca2298" start_index="0" end="f93e6b68-5605-4dfe-9062-8306a522a2ca" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="32656379-ddd5-4983-8a8c-138561ca2298" start_index="0" end="71e532ae-3735-4c30-b1d3-94b11104fbd1" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="12ae3471-779a-4e02-a970-e41c58d35834" start_index="0" end="32656379-ddd5-4983-8a8c-138561ca2298" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="12ae3471-779a-4e02-a970-e41c58d35834" start_index="0" end="32656379-ddd5-4983-8a8c-138561ca2298" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="12ae3471-779a-4e02-a970-e41c58d35834" start_index="0" end="32656379-ddd5-4983-8a8c-138561ca2298" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ab750481-0bdb-456b-a691-c2a4db922146" start_index="0" end="32656379-ddd5-4983-8a8c-138561ca2298" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2400ccea-0a65-49f7-91da-8b6960580cfe" start_index="0" end="ab750481-0bdb-456b-a691-c2a4db922146" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d84e7bfe-b398-4d5f-b65d-556807e1d1f5" start_index="0" end="2400ccea-0a65-49f7-91da-8b6960580cfe" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d84e7bfe-b398-4d5f-b65d-556807e1d1f5" start_index="0" end="2400ccea-0a65-49f7-91da-8b6960580cfe" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1ce1e453-a710-4c69-8c9d-92ce026d48cd" start_index="0" end="f93e6b68-5605-4dfe-9062-8306a522a2ca" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a00eac2d-9442-4f0e-be80-ebfaab0b2470" start_index="0" end="d51848e8-6663-4eaf-a5f1-f164de9dec9f" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1c7fb340-9e53-4178-9502-c08d46305ab5" start_index="0" end="71e532ae-3735-4c30-b1d3-94b11104fbd1" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="62bdcf3b-5461-43c2-acc1-aa64a8fb121c" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="6" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6dec3861-cb36-450a-88c7-60a6df8d0e4a" start_index="0" end="ba3dca4f-8406-4a58-ae20-f51c53be632a" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a3a70728-6e36-4f33-b35c-7fa2c22d6bb8" start_index="0" end="6dec3861-cb36-450a-88c7-60a6df8d0e4a" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a3a70728-6e36-4f33-b35c-7fa2c22d6bb8" start_index="1" end="6dec3861-cb36-450a-88c7-60a6df8d0e4a" end_index="5" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bff17c28-dcc0-4cd6-81cb-66a2a8723522" start_index="0" end="6dec3861-cb36-450a-88c7-60a6df8d0e4a" end_index="1" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="735fe796-5272-47f5-97b0-e9e53d1a6cf8" text="Inputs are:&#xD;&#xA;sun vectors&#xD;&#xA;points,&#xD;&#xA;vectors,&#xD;&#xA;timestep,&#xD;&#xA;and ambient division" x="2434.87728170374" y="-749.083679903425" />
  </Notes>
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="8caf77ab-5ea5-4b0e-a81e-68d7ab8f9b92" annotationText="generate sky" left="1591.55328649509" top="-292.377701733651" width="144" height="158" fontSize="24" InitialTop="-253.377701733651" InitialHeight="149" TextblockHeight="29" backgrouund="#FFC1D676">
      <Models ModelGuid="7e6ef32f-0181-43fa-916c-913d9b63467f" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="e59fddb7-8303-4268-9908-0c710016d14b" annotationText="Radiance Parameters" left="1574.58632572478" top="124.368150066834" width="144" height="187" fontSize="24" InitialTop="192.368150066834" InitialHeight="149" TextblockHeight="58" backgrouund="#FFFFAA45">
      <Models ModelGuid="ab5d7481-9ede-4111-a1e7-ac1fa56895c9" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="7a50e78f-e762-4d14-b90a-7805b1312ff1" annotationText="grid based analysis recipe" left="2273.82901332794" top="-399.836383258501" width="144" height="319" fontSize="24" InitialTop="-303.836383258501" InitialHeight="149" TextblockHeight="86" backgrouund="#FFFFAA45">
      <Models ModelGuid="d51848e8-6663-4eaf-a5f1-f164de9dec9f" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="f9265f1e-2de7-4597-ab4b-12866b8cd0e2" annotationText="Glass Materials" left="1254.52947964038" top="597.307742546112" width="144" height="213" fontSize="24" InitialTop="665.307742546112" InitialHeight="149" TextblockHeight="58" backgrouund="#FFFFAA45">
      <Models ModelGuid="68dfd842-2fca-4d0a-a880-1374da132baf" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="e60eb519-61c5-4739-bc1f-880ee139233b" annotationText="Honeybee Surface" left="1951.6503654983" top="357.679150554131" width="144" height="291" fontSize="24" InitialTop="425.679150554131" InitialHeight="253" TextblockHeight="58" backgrouund="#FFC1D676">
      <Models ModelGuid="d42d2c7e-1bff-4d9e-9617-65ea2ddaed1e" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="ce8a620f-d757-435c-8bdb-30a1adc24ba5" annotationText="Run&#xD;&#xA;Analysis" left="2815.92019841905" top="-148.729778071911" width="144" height="317" fontSize="24" InitialTop="-80.7297780719105" InitialHeight="227" TextblockHeight="58" backgrouund="#FF48B9FF">
      <Models ModelGuid="ba3dca4f-8406-4a58-ae20-f51c53be632a" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="e0f74d54-9999-40c0-92d1-5596d1ebb71f" annotationText="I assume there is a better way to merge lists that I'm not aware of!" left="2187.15629444112" top="187.351788048574" width="287.18355145602" height="163.556438029144" fontSize="14" InitialTop="231.351788048574" InitialHeight="151.658547083294" TextblockHeight="34" backgrouund="#FFC1D676">
      <Models ModelGuid="0f4001dc-b13b-456c-9e7a-e732a169ad0f" />
      <Models ModelGuid="633bca5a-879a-4879-88c9-bfc0410bfdd8" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="26dcb578-5adb-4641-8280-5634bd26e96f" annotationText="Radiance Properties" left="1655.13875293187" top="569.768621659053" width="144" height="187" fontSize="24" InitialTop="637.768621659053" InitialHeight="149" TextblockHeight="58" backgrouund="#FFC1D676">
      <Models ModelGuid="30e728a8-1092-45aa-ae25-2249c0d5053d" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="28e8044a-9c09-4460-9362-602bf48878dd" annotationText="sunlighthours analysis recipe" left="2277.3233581849" top="-917.096814609149" width="144" height="319" fontSize="24" InitialTop="-821.096814609149" InitialHeight="253" TextblockHeight="86" backgrouund="#FFFFAA45">
      <Models ModelGuid="6dec3861-cb36-450a-88c7-60a6df8d0e4a" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-2.5218104479925" eyeY="11.7840282221227" eyeZ="3.52976578736502" lookX="8.20561805765373" lookY="-11.5523624233532" lookZ="-7.33941021436392" upX="0.416795721367271" upY="0.829037565521411" upZ="-0.372797580032148" />
  </Cameras>
</Workspace>