from abc import ABCMeta, abstractmethod, abstractproperty
import os


class HBSky:
    """Base class for Honeybee Skies"""
    def __init__(self):
        self.__head = "# Generated by Honeybee\n"
        self.__main = "# Place holder for Radiance command. Overwrite this by getRadianceSkyLine() method in sub-classes."
        self.__tale = "\nskyfunc glow sky_mat\n" + \
            "0\n" + \
            "0\n" + \
            "4\n" + \
            "1 1 1 0\n" + \
            "sky_mat source sky\n" + \
            "0\n" + \
            "0\n" + \
            "4\n" + \
            "0 0 1 180\n" + \
            "skyfunc glow ground_glow\n" + \
            "0\n" + \
            "0\n" + \
            "4\n" + \
            "1 .8 .5 0\n" + \
            "ground_glow source ground\n" + \
            "0\n" + \
            "0\n" + \
            "4\n" + \
            "0 0 -1 180\n"

    @property
    def main(self):
        return self.__main

    @main.setter
    def main(self, newString):
        self.__main = newString

    @abstractmethod
    def getRadianceSkyLine(self):
        """Line that generates Radiance's sky and overwrites self.__main"""
        pass

    @property
    def radianceDefinition(self):
        return self.__head + self.main + self.__tale

    def save(self, filepath):
        with open(filepath, "wb") as skyFile:
            # write the sky to filepath
            skyFile.write(self.radianceDefinition)


class HBCertainIlluminanceLevelSky(HBSky):
    """Uniform CIE sky based on illuminance value
        Attributes:
            illuminanceValue: Desired illuminance value in lux

        Usage:
            sky = HBCertainIlluminanceLevelSky(1000)
            sky.save("c:/ladybug/skies/1000luxsky.sky")
    """

    def __init__(self, illuminanceValue):
        HBSky.__init__(self)
        assert float(illuminanceValue) >= 0, "Illuminace value can't be negative."
        self.illuminanceValue = float(illuminanceValue)
        self.getRadianceSkyLine()

    def getRadianceSkyLine(self):
        """Line that generates Radiance's sky"""
        self.main = "# horizontal sky illuminance: %.3f lux\n"%self.illuminanceValue + \
            "!gensky 12 6 12:00 -u -B %.3f \n"%(self.illuminanceValue/179)

    def __repr__(self):
        return "Uniform CIE sky [%.2f lux]"%self.illuminanceValue
