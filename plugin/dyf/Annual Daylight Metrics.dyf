<Workspace Category="Honeybee.04 :: Daylight :: Daylight" Description="Annual Daylight Metrics
-" ID="cbfdaf47-1afe-4fbb-88f9-14b45c9a702b" Name="Annual Daylight Metrics" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;annualmetrics_node.py&quot;;" ShouldFocus="false" guid="e957b3d1-af9e-48e8-8000-0bbcd8589ab8" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="b1d39d32-c9c7-4529-9e61-1fdd0ac5ea89" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    clr.AddReference('ProtoGeometry')
    _loc = tuple(a.Location
                 for a in AppDomain.CurrentDomain.GetAssemblies()
                 if 'ProtoGeometry' in a.FullName)

    try:
        _ver = float(_loc[0].split('\\')[-2])
    except:
        _ver = float(_loc[0].split('\\')[-2].split(' ')[-1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = ('\\').join(_loc[0].split('\\')[-4:-1])
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="c0f3cbcd-07d6-44b2-aab8-a844e1561421" inputcount="6" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
      <PortInfo default="false" index="5"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="9efd4ac0-291a-4774-83a2-0866d9f7dc41" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_analysisGrid" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// An analysis grid output from run Radiance analysis.&#xD;&#xA;_analysisGrid: var;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="fb7c8896-5c7f-4f64-8c1f-0d1bd68f0b71" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="blindStates_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// List of state ids for all the sources for input hoys.&#xD;&#xA;// If you want a source to be removed set the state to -1. You can use&#xD;&#xA;// this option to study the effect of different blind states.&#xD;&#xA;blindStates_: var[] = {};"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="f14abec5-f845-4084-a275-2f033ea5b50b" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_occSchedule_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// An annual occupancy schedule.&#xD;&#xA;_occSchedule_: var = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="49493f0a-7ca1-47e2-8aa2-627d749b281c" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_threshold_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// Threshhold for daylight autonomy in lux (default: 300).&#xD;&#xA;_threshold_: int = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="a48646ff-2ce0-4a18-81e6-1a9a06fcf3ec" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_minmax_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="855">
      <Symbol value="// A list for min, max value for useful daylight illuminance&#xD;&#xA;_minmax_: int[] = {};"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];&#xA;out[1];&#xA;out[2];&#xA;out[3];&#xA;out[4];&#xA;out[5];" ShouldFocus="false" guid="2706200b-33d9-4407-8b9c-166365fb0a1e" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="7257a82d-6478-4bf8-887c-597b6e2a24c4" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="DA" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Daylight autonomy. The percentage of time that each sensor&#xD;&#xA;// recieves equal or more than the threshold.&#xD;&#xA;DA;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="80325a55-06c1-4dab-ad37-18a372627e25" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="CDA" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="570">
      <Symbol value="// Continuous daylight autonomy.&#xD;&#xA;CDA;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="29c5188e-b88f-4803-9a4d-d2c4837d785a" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="UDI" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="665">
      <Symbol value="// Useful daylight illuminance. The percentage of time that illuminace&#xD;&#xA;// falls between minimum and maximum thresholds.&#xD;&#xA;UDI;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="e9dbe2b4-8464-4494-83a0-db25b05847c9" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="UDILess" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="760">
      <Symbol value="// The percentage of time that illuminace falls less than minimum&#xD;&#xA;// threshold.&#xD;&#xA;UDILess;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="e4bce424-5851-4d3d-876f-f3bdf2578850" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="UDIMore" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="855">
      <Symbol value="// The percentage of time that illuminace falls more than maximum&#xD;&#xA;// threshold.&#xD;&#xA;UDIMore;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="10f7ca90-6a63-401c-84f4-1788584131d3" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="legendPar" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="950">
      <Symbol value="// Script variable annualMetrics&#xD;&#xA;legendPar;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="b0b4629d-3fcc-4b62-8430-bd59252e66a0" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="21dba435-b23d-4efe-bcdd-35582d67cb2b" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="b1d39d32-c9c7-4529-9e61-1fdd0ac5ea89" end_index="0" portType="0" start="e957b3d1-af9e-48e8-8000-0bbcd8589ab8" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="b1d39d32-c9c7-4529-9e61-1fdd0ac5ea89" end_index="1" portType="0" start="e957b3d1-af9e-48e8-8000-0bbcd8589ab8" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="c0f3cbcd-07d6-44b2-aab8-a844e1561421" end_index="0" portType="0" start="b1d39d32-c9c7-4529-9e61-1fdd0ac5ea89" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="c0f3cbcd-07d6-44b2-aab8-a844e1561421" end_index="1" portType="0" start="9efd4ac0-291a-4774-83a2-0866d9f7dc41" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="c0f3cbcd-07d6-44b2-aab8-a844e1561421" end_index="2" portType="0" start="fb7c8896-5c7f-4f64-8c1f-0d1bd68f0b71" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="c0f3cbcd-07d6-44b2-aab8-a844e1561421" end_index="3" portType="0" start="f14abec5-f845-4084-a275-2f033ea5b50b" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="c0f3cbcd-07d6-44b2-aab8-a844e1561421" end_index="4" portType="0" start="49493f0a-7ca1-47e2-8aa2-627d749b281c" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="c0f3cbcd-07d6-44b2-aab8-a844e1561421" end_index="5" portType="0" start="a48646ff-2ce0-4a18-81e6-1a9a06fcf3ec" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2706200b-33d9-4407-8b9c-166365fb0a1e" end_index="0" portType="0" start="c0f3cbcd-07d6-44b2-aab8-a844e1561421" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7257a82d-6478-4bf8-887c-597b6e2a24c4" end_index="0" portType="0" start="2706200b-33d9-4407-8b9c-166365fb0a1e" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="80325a55-06c1-4dab-ad37-18a372627e25" end_index="0" portType="0" start="2706200b-33d9-4407-8b9c-166365fb0a1e" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="29c5188e-b88f-4803-9a4d-d2c4837d785a" end_index="0" portType="0" start="2706200b-33d9-4407-8b9c-166365fb0a1e" start_index="2"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e9dbe2b4-8464-4494-83a0-db25b05847c9" end_index="0" portType="0" start="2706200b-33d9-4407-8b9c-166365fb0a1e" start_index="3"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e4bce424-5851-4d3d-876f-f3bdf2578850" end_index="0" portType="0" start="2706200b-33d9-4407-8b9c-166365fb0a1e" start_index="4"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="10f7ca90-6a63-401c-84f4-1788584131d3" end_index="0" portType="0" start="2706200b-33d9-4407-8b9c-166365fb0a1e" start_index="5"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="b0b4629d-3fcc-4b62-8430-bd59252e66a0" end_index="0" portType="0" start="b1d39d32-c9c7-4529-9e61-1fdd0ac5ea89" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="b0b4629d-3fcc-4b62-8430-bd59252e66a0" end_index="1" portType="0" start="c0f3cbcd-07d6-44b2-aab8-a844e1561421" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="21dba435-b23d-4efe-bcdd-35582d67cb2b" end_index="0" portType="0" start="b0b4629d-3fcc-4b62-8430-bd59252e66a0" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
