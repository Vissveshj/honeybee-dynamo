<Workspace Category="Honeybee.04 :: Daylight :: Daylight" Description="Calculate annual solar exposure (ASE).
As per IES-LM-83-12 ASE is the percent of sensors that are
found to be exposed to more than 1000lux of direct sunlight for
more than 250hrs per year. For LEED credits no more than 10% of
the points in the grid should fail this measure.
-" ID="b05bddbc-db07-40f3-a69f-69577960c595" Name="Annual Solar Exposure" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;ase_node.py&quot;;" ShouldFocus="false" guid="4a2636cb-12b6-44e0-b9a1-b8dc2b3c4fba" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="b50ba867-9bb6-4ebc-a6b2-48e1b0c4821f" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    clr.AddReference('ProtoGeometry')
    _loc = tuple(a.Location
                 for a in AppDomain.CurrentDomain.GetAssemblies()
                 if 'ProtoGeometry' in a.FullName)

    try:
        _ver = float(_loc[0].split('\\')[-2])
    except:
        _ver = float(_loc[0].split('\\')[-2].split(' ')[-1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = ('\\').join(_loc[0].split('\\')[-4:-1])
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="4e389f2d-bd35-4332-8722-30e1f1b933e3" inputcount="7" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
      <PortInfo default="false" index="5"/>
      <PortInfo default="false" index="6"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="55f3dd1c-275e-43cc-a989-b2d020dc6306" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_analysisGrid" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// An analysis grid output from run Radiance analysis.&#xD;&#xA;_analysisGrid: var;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="a7a91e4d-0c04-4c5f-94e6-e48156e390bf" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="blindStates_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// List of state ids for all the sources for input hoys.&#xD;&#xA;// If you want a source to be removed set the state to -1. ASE must&#xD;&#xA;// be calculated without dynamic blinds but you can use this option&#xD;&#xA;// to study the effect of different blind states.&#xD;&#xA;blindStates_: var[] = {};"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="45d92982-7241-442f-9b55-d28044bb0e81" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_occSchedule_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// An annual occupancy schedule.&#xD;&#xA;_occSchedule_: var = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="092fea02-53f4-405f-8113-63ce5f283b6e" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_threshold_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// Threshhold for solar exposure in lux (default: 1000).&#xD;&#xA;_threshold_: int = 1000;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="b941ac4a-7a5f-4e14-a2c9-79e3d59e6ec1" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_targetHrs_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="855">
      <Symbol value="// Minimum targe hours for each point (default: 250).&#xD;&#xA;_targetHrs_: int = 250;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="9cd330ce-33c9-409b-89f5-0b1f096c3ffb" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_targetArea_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="950">
      <Symbol value="// Minimum target area percentage for this grid (default: 10)&#xD;&#xA;_targetArea_: int = 10;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];&#xA;out[1];&#xA;out[2];&#xA;out[3];" ShouldFocus="false" guid="e15b70f6-a924-4740-b576-a089ee39e9ff" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="959fa4ea-abec-4507-acd8-d586a626d17e" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="success" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Script variable Python&#xD;&#xA;success;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="f42a068d-e3d2-4dde-8a60-1bbdb2d1c6cc" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="perArea" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="570">
      <Symbol value="// Percentage area that doesn't meet the target.&#xD;&#xA;perArea;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="2f279415-f050-4a63-aa52-b496bcd5998f" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="prblmPts" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="665">
      <Symbol value="// A list of problematic test points.&#xD;&#xA;prblmPts;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="190f9954-c4b7-4fba-a463-808f21610109" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="prblmHrs" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="760">
      <Symbol value="// Problematic hours for each point.&#xD;&#xA;prblmHrs;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="0dfd86f6-1963-49e1-9080-acf54db9455d" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="95cb923e-1f7f-4567-9dc7-07049226e13d" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="b50ba867-9bb6-4ebc-a6b2-48e1b0c4821f" end_index="0" portType="0" start="4a2636cb-12b6-44e0-b9a1-b8dc2b3c4fba" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="b50ba867-9bb6-4ebc-a6b2-48e1b0c4821f" end_index="1" portType="0" start="4a2636cb-12b6-44e0-b9a1-b8dc2b3c4fba" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="4e389f2d-bd35-4332-8722-30e1f1b933e3" end_index="0" portType="0" start="b50ba867-9bb6-4ebc-a6b2-48e1b0c4821f" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="4e389f2d-bd35-4332-8722-30e1f1b933e3" end_index="1" portType="0" start="55f3dd1c-275e-43cc-a989-b2d020dc6306" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="4e389f2d-bd35-4332-8722-30e1f1b933e3" end_index="2" portType="0" start="a7a91e4d-0c04-4c5f-94e6-e48156e390bf" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="4e389f2d-bd35-4332-8722-30e1f1b933e3" end_index="3" portType="0" start="45d92982-7241-442f-9b55-d28044bb0e81" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="4e389f2d-bd35-4332-8722-30e1f1b933e3" end_index="4" portType="0" start="092fea02-53f4-405f-8113-63ce5f283b6e" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="4e389f2d-bd35-4332-8722-30e1f1b933e3" end_index="5" portType="0" start="b941ac4a-7a5f-4e14-a2c9-79e3d59e6ec1" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="4e389f2d-bd35-4332-8722-30e1f1b933e3" end_index="6" portType="0" start="9cd330ce-33c9-409b-89f5-0b1f096c3ffb" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e15b70f6-a924-4740-b576-a089ee39e9ff" end_index="0" portType="0" start="4e389f2d-bd35-4332-8722-30e1f1b933e3" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="959fa4ea-abec-4507-acd8-d586a626d17e" end_index="0" portType="0" start="e15b70f6-a924-4740-b576-a089ee39e9ff" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="f42a068d-e3d2-4dde-8a60-1bbdb2d1c6cc" end_index="0" portType="0" start="e15b70f6-a924-4740-b576-a089ee39e9ff" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2f279415-f050-4a63-aa52-b496bcd5998f" end_index="0" portType="0" start="e15b70f6-a924-4740-b576-a089ee39e9ff" start_index="2"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="190f9954-c4b7-4fba-a463-808f21610109" end_index="0" portType="0" start="e15b70f6-a924-4740-b576-a089ee39e9ff" start_index="3"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="0dfd86f6-1963-49e1-9080-acf54db9455d" end_index="0" portType="0" start="b50ba867-9bb6-4ebc-a6b2-48e1b0c4821f" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="0dfd86f6-1963-49e1-9080-acf54db9455d" end_index="1" portType="0" start="4e389f2d-bd35-4332-8722-30e1f1b933e3" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="95cb923e-1f7f-4567-9dc7-07049226e13d" end_index="0" portType="0" start="0dfd86f6-1963-49e1-9080-acf54db9455d" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
