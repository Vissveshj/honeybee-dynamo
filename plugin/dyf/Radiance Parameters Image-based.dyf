<Workspace Category="Honeybee.03 :: Daylight :: Recipe" Description="Radiance parameters library for analysis recipes.
Check here for more details: http://radsite.lbl.gov/radiance/refer/Notes/rpict_options.html
Read more about the parameters at: http://daysim.ning.com/
Here is my favorite presentation by John Mardaljevic: http://radiance-online.org/community/workshops/2011-berkeley-ca/presentations/day1/JM_AmbientCalculation.pdf
-" ID="94c55df1-d742-42a2-9210-158ef6ae0940" Name="Radiance Parameters Image-based" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;radparimagebased_node.py&quot;;" ShouldFocus="false" guid="218d392c-c810-4869-bff3-66a6febd788a" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="a770d152-5273-4f96-a5ae-d8671af019ee" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    clr.AddReference('ProtoGeometry')
    _loc = tuple(a.Location
                 for a in AppDomain.CurrentDomain.GetAssemblies()
                 if 'ProtoGeometry' in a.FullName)

    try:
        _ver = float(_loc[0].split('\\')[-2])
    except:
        _ver = float(_loc[0].split('\\')[-2].split(' ')[-1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = ('\\').join(_loc[0].split('\\')[-4:-1])
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="bb45b826-54fc-4b28-b192-e705f506b999" inputcount="7" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
      <PortInfo default="false" index="5"/>
      <PortInfo default="false" index="6"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="06b1d3ac-d6ad-4a54-8d2f-51fc4987b40d" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_quality_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// 0 &gt; low, 1 &gt; Medium, 2 &gt; High&#xD;&#xA;_quality_: int = 0;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="b7016426-098e-4f99-b6f1-8f463c5ee4df" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_recipeType_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// 0 &gt; Point-in-time, 1 &gt; Daylight Coeff., 2 &gt; 3Phase, 3 &gt; 5Phase&#xD;&#xA;_recipeType_: var = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="bada9d6e-ff90-427a-90d3-35e525646044" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="radOptPar_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// Use this input to set other Radiance parameters as needed.&#xD;&#xA;// You must follow Radiance's standard syntax (e.g. -ps 1 -lw 0.01)&#xD;&#xA;radOptPar_: int = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="2cac7ecc-2ca7-4030-a213-4a25a17c7202" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="vmtxOptPar_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// Use this input to set other Radiance parameters for view matrix&#xD;&#xA;// calculation as needed. You must follow Radiance's standard syntax&#xD;&#xA;// (e.g. -ps 1 -lw 0.01).&#xD;&#xA;vmtxOptPar_: var = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="0c52579e-484f-4dba-b7f3-97f3c81f6c66" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="dmtxOptPar_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="855">
      <Symbol value="// Use this input to set other Radiance parameters for daylight&#xD;&#xA;// matrix calculation as needed. You must follow Radiance's standard syntax&#xD;&#xA;// (e.g. -ps 1 -lw 0.01).&#xD;&#xA;dmtxOptPar_: var = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="2eaec2c9-ba16-442a-a784-0718729461f5" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="smtxOptPar_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="950">
      <Symbol value="// Use this input to set other Radiance parameters for sun&#xD;&#xA;// matrix calculation as needed. You must follow Radiance's standard syntax&#xD;&#xA;// (e.g. -ps 1 -lw 0.01).&#xD;&#xA;smtxOptPar_: string = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];&#xA;out[1];&#xA;out[2];&#xA;out[3];" ShouldFocus="false" guid="50504575-9a46-4b5b-bced-7b790d44c775" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="3bbe6626-1515-472b-b034-bbcd174395bf" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="radPar" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Radiance parameters.&#xD;&#xA;radPar;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="e16da23f-6166-4b90-b18b-2c530010262d" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="vmtxPar" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="570">
      <Symbol value="// Radiance parameters for view matrix calculation.&#xD;&#xA;vmtxPar;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="f4a705a2-5b7c-4f89-a51c-84f17c70bf74" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="dmtxPar" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="665">
      <Symbol value="// Radiance parameters for daylight matrix calculation.&#xD;&#xA;dmtxPar;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="ba11284b-78a4-4e87-88c5-19626df5439f" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="smtxPar" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="760">
      <Symbol value="// Radiance parameters for direct sun matrix calculation.&#xD;&#xA;smtxPar;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="caab9558-a0b4-4569-8c91-b392915bc1be" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="299e998b-23cc-4de1-a8d9-fb9eaa20331d" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="a770d152-5273-4f96-a5ae-d8671af019ee" end_index="0" portType="0" start="218d392c-c810-4869-bff3-66a6febd788a" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="a770d152-5273-4f96-a5ae-d8671af019ee" end_index="1" portType="0" start="218d392c-c810-4869-bff3-66a6febd788a" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="bb45b826-54fc-4b28-b192-e705f506b999" end_index="0" portType="0" start="a770d152-5273-4f96-a5ae-d8671af019ee" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="bb45b826-54fc-4b28-b192-e705f506b999" end_index="1" portType="0" start="06b1d3ac-d6ad-4a54-8d2f-51fc4987b40d" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="bb45b826-54fc-4b28-b192-e705f506b999" end_index="2" portType="0" start="b7016426-098e-4f99-b6f1-8f463c5ee4df" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="bb45b826-54fc-4b28-b192-e705f506b999" end_index="3" portType="0" start="bada9d6e-ff90-427a-90d3-35e525646044" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="bb45b826-54fc-4b28-b192-e705f506b999" end_index="4" portType="0" start="2cac7ecc-2ca7-4030-a213-4a25a17c7202" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="bb45b826-54fc-4b28-b192-e705f506b999" end_index="5" portType="0" start="0c52579e-484f-4dba-b7f3-97f3c81f6c66" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="bb45b826-54fc-4b28-b192-e705f506b999" end_index="6" portType="0" start="2eaec2c9-ba16-442a-a784-0718729461f5" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="50504575-9a46-4b5b-bced-7b790d44c775" end_index="0" portType="0" start="bb45b826-54fc-4b28-b192-e705f506b999" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3bbe6626-1515-472b-b034-bbcd174395bf" end_index="0" portType="0" start="50504575-9a46-4b5b-bced-7b790d44c775" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e16da23f-6166-4b90-b18b-2c530010262d" end_index="0" portType="0" start="50504575-9a46-4b5b-bced-7b790d44c775" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="f4a705a2-5b7c-4f89-a51c-84f17c70bf74" end_index="0" portType="0" start="50504575-9a46-4b5b-bced-7b790d44c775" start_index="2"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="ba11284b-78a4-4e87-88c5-19626df5439f" end_index="0" portType="0" start="50504575-9a46-4b5b-bced-7b790d44c775" start_index="3"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="caab9558-a0b4-4569-8c91-b392915bc1be" end_index="0" portType="0" start="a770d152-5273-4f96-a5ae-d8671af019ee" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="caab9558-a0b4-4569-8c91-b392915bc1be" end_index="1" portType="0" start="bb45b826-54fc-4b28-b192-e705f506b999" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="299e998b-23cc-4de1-a8d9-fb9eaa20331d" end_index="0" portType="0" start="caab9558-a0b4-4569-8c91-b392915bc1be" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
