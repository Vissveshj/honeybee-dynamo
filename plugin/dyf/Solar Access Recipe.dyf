<Workspace Category="Honeybee.03 :: Daylight :: Recipe" Description="Solar Access Recipe.
-" ID="dc734462-91f2-41d2-9d5c-df93839fb632" Name="Solar Access Recipe" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;solaraccessrecipe_node.py&quot;;" ShouldFocus="false" guid="19d238fb-f158-4c1b-8b83-65e94551892e" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="bc6ef5a6-600c-46d2-9951-4618b9281851" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    clr.AddReference('ProtoGeometry')
    _loc = tuple(a.Location
                 for a in AppDomain.CurrentDomain.GetAssemblies()
                 if 'ProtoGeometry' in a.FullName)

    try:
        _ver = float(_loc[0].split('\\')[-2])
    except:
        _ver = float(_loc[0].split('\\')[-2].split(' ')[-1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = ('\\').join(_loc[0].split('\\')[-4:-1])
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="3e07ce1a-a1cd-47b3-9e07-61adc2eb371f" inputcount="5" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="1ea29fc2-c730-4963-b6b3-317c5a04eb25" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_sunVectors" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// A list of vectors that represents sun vectors. You can use&#xD;&#xA;// Ladybug sunpath to generate the vectors for any time of the year. If&#xD;&#xA;// you're generating the vectors in a different way make sure that the&#xD;&#xA;// vectors are looking downwards from the sun (e.g. z &lt; 0).&#xD;&#xA;_sunVectors: Autodesk.Vector[];"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="b03842da-1c42-464f-83d9-2a5d234a1883" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_hoys" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// A list of hours of the year.&#xD;&#xA;_hoys: double[];"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="c533abbe-3599-48a2-9c05-9ad05d2a158f" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_analysisGrids" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// List of honeybee analysis grids. Use Analysis grid component&#xD;&#xA;// which you can find under 00 :: Create to create them.&#xD;&#xA;_analysisGrids: var[];"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="47653bf7-cdda-42e1-bb8c-3935cda386c5" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_timestep_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// Timstep for sun vectors. Default is 1 which means each sun vector&#xD;&#xA;// represents an hour of time.&#xD;&#xA;_timestep_: int = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];" ShouldFocus="false" guid="c5192eb6-804d-404f-861a-47062dc12784" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="c7662c58-3b37-4385-90d5-318fa4157c11" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="analysisRecipe" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Sunlight hours analysis recipe. Connect this recipe to&#xD;&#xA;// Run Radiance Simulation to run a sunlight hours analysis.&#xD;&#xA;analysisRecipe;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="69d99433-ef97-4e4b-b971-7f4319111903" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="3d449506-22b7-4f3e-998f-bcbb0731f799" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="bc6ef5a6-600c-46d2-9951-4618b9281851" end_index="0" portType="0" start="19d238fb-f158-4c1b-8b83-65e94551892e" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="bc6ef5a6-600c-46d2-9951-4618b9281851" end_index="1" portType="0" start="19d238fb-f158-4c1b-8b83-65e94551892e" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3e07ce1a-a1cd-47b3-9e07-61adc2eb371f" end_index="0" portType="0" start="bc6ef5a6-600c-46d2-9951-4618b9281851" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3e07ce1a-a1cd-47b3-9e07-61adc2eb371f" end_index="1" portType="0" start="1ea29fc2-c730-4963-b6b3-317c5a04eb25" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3e07ce1a-a1cd-47b3-9e07-61adc2eb371f" end_index="2" portType="0" start="b03842da-1c42-464f-83d9-2a5d234a1883" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3e07ce1a-a1cd-47b3-9e07-61adc2eb371f" end_index="3" portType="0" start="c533abbe-3599-48a2-9c05-9ad05d2a158f" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3e07ce1a-a1cd-47b3-9e07-61adc2eb371f" end_index="4" portType="0" start="47653bf7-cdda-42e1-bb8c-3935cda386c5" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="c5192eb6-804d-404f-861a-47062dc12784" end_index="0" portType="0" start="3e07ce1a-a1cd-47b3-9e07-61adc2eb371f" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="c7662c58-3b37-4385-90d5-318fa4157c11" end_index="0" portType="0" start="c5192eb6-804d-404f-861a-47062dc12784" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="69d99433-ef97-4e4b-b971-7f4319111903" end_index="0" portType="0" start="bc6ef5a6-600c-46d2-9951-4618b9281851" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="69d99433-ef97-4e4b-b971-7f4319111903" end_index="1" portType="0" start="3e07ce1a-a1cd-47b3-9e07-61adc2eb371f" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3d449506-22b7-4f3e-998f-bcbb0731f799" end_index="0" portType="0" start="69d99433-ef97-4e4b-b971-7f4319111903" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
