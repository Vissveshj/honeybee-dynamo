<Workspace Category="Honeybee.01 :: Daylight :: Materials" Description="Radiance BSDF Material
-" ID="0aa5269c-5759-4252-8877-5c2f2735023b" Name="Radiance BSDF Material" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;bsdfmaterial_node.py&quot;;" ShouldFocus="false" guid="07111b52-55ee-4b52-abe7-565509d56273" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="2a436025-faad-4a06-ab1a-ecf85ea591a0" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    clr.AddReference('ProtoGeometry')
    _loc = tuple(a.Location
                 for a in AppDomain.CurrentDomain.GetAssemblies()
                 if 'ProtoGeometry' in a.FullName)

    try:
        _ver = float(_loc[0].split('\\')[-2])
    except:
        _ver = float(_loc[0].split('\\')[-2].split(' ')[-1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = ('\\').join(_loc[0].split('\\')[-4:-1])
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="8794f5da-1f06-42da-9e88-26c4472f1330" inputcount="4" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="70f00bff-1ec0-4b8e-9f70-9b2ce09e6803" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_xmlfile" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// Path to an xml file. Data will not be cached in memory.&#xD;&#xA;_xmlfile: string;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7b09377b-6f84-4a35-8c0b-5560b838b978" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_upVector_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// Optional number to set the thickness of the BSDF material.&#xD;&#xA;_upVector_: Autodesk.Vector = Autodesk.Vector.ByCoordinates(0.01,0.01,1);"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7302c509-b74b-4214-b219-0042c7286370" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="thickness_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// Optional parameter to set the thickness of the BSDF material.  The default is set to 0.&#xD;&#xA;thickness_: double = 0;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];" ShouldFocus="false" guid="4050b556-b2ca-49b4-88ad-8ad5f380d76c" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="80447950-aa73-4530-b7d1-9208af1b2fd6" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="material" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Radiance BSDF material&#xD;&#xA;material;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="3e7f6587-6475-447e-9291-33fef89e2747" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="a0a402bb-a698-4e3a-86d0-d01bc82bfcd4" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="2a436025-faad-4a06-ab1a-ecf85ea591a0" end_index="0" portType="0" start="07111b52-55ee-4b52-abe7-565509d56273" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2a436025-faad-4a06-ab1a-ecf85ea591a0" end_index="1" portType="0" start="07111b52-55ee-4b52-abe7-565509d56273" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8794f5da-1f06-42da-9e88-26c4472f1330" end_index="0" portType="0" start="2a436025-faad-4a06-ab1a-ecf85ea591a0" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8794f5da-1f06-42da-9e88-26c4472f1330" end_index="1" portType="0" start="70f00bff-1ec0-4b8e-9f70-9b2ce09e6803" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8794f5da-1f06-42da-9e88-26c4472f1330" end_index="2" portType="0" start="7b09377b-6f84-4a35-8c0b-5560b838b978" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8794f5da-1f06-42da-9e88-26c4472f1330" end_index="3" portType="0" start="7302c509-b74b-4214-b219-0042c7286370" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="4050b556-b2ca-49b4-88ad-8ad5f380d76c" end_index="0" portType="0" start="8794f5da-1f06-42da-9e88-26c4472f1330" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="80447950-aa73-4530-b7d1-9208af1b2fd6" end_index="0" portType="0" start="4050b556-b2ca-49b4-88ad-8ad5f380d76c" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3e7f6587-6475-447e-9291-33fef89e2747" end_index="0" portType="0" start="2a436025-faad-4a06-ab1a-ecf85ea591a0" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3e7f6587-6475-447e-9291-33fef89e2747" end_index="1" portType="0" start="8794f5da-1f06-42da-9e88-26c4472f1330" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="a0a402bb-a698-4e3a-86d0-d01bc82bfcd4" end_index="0" portType="0" start="3e7f6587-6475-447e-9291-33fef89e2747" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
