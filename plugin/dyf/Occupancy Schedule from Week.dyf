<Workspace Category="Honeybee.00 :: Create" Description="Typical Occupancy Schedule based on typical week.
-" ID="b82d7c65-6186-4e3d-8c60-c38c8393e293" Name="Occupancy Schedule from Week" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Honeybee&quot;;&#xA;&quot;occschduleweek_node.py&quot;;" ShouldFocus="false" guid="282c2f77-7425-42d6-9f2b-54b06bcbba48" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="8a452e1c-eac5-4c8b-b8d1-d3a347482690" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    clr.AddReference('ProtoGeometry')
    _loc = tuple(a.Location
                 for a in AppDomain.CurrentDomain.GetAssemblies()
                 if 'ProtoGeometry' in a.FullName)

    try:
        _ver = float(_loc[0].split('\\')[-2])
    except:
        _ver = float(_loc[0].split('\\')[-2].split(' ')[-1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = ('\\').join(_loc[0].split('\\')[-4:-1])
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/honeybee-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="7ab7302d-fe39-423a-af4f-baca344b98c6" inputcount="5" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="930b141d-8bf2-49fc-bec9-f723ac3a3e1c" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_occHours_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// Start and end hour of work day as a tuple. Default is (8, 17).&#xD;&#xA;_occHours_: int[] = {};"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="22d8cd0a-15d7-4428-a62e-d8bf6c30566c" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_offHours_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// A list of hours that building is unoccupied during the occupancy&#xD;&#xA;// period everyday (e.g. lunch break). Default is an hour lunch break at&#xD;&#xA;// (12, 13). Use -1 for no break during the day.&#xD;&#xA;_offHours_: int[] = {};"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="d6a5e866-3737-49a1-8425-cb4e4acf91ac" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_weekend_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// A list of numbers to indicate the weekend days. [0] None, [1-7] MON&#xD;&#xA;// to SUN. Default is 6, 7 (SAT, SUN).&#xD;&#xA;_weekend_: int[] = {};"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="ca3a60f6-53a6-4c53-bd96-e9501ccf9cea" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_defValue_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// Default value for occupancy hours (Default: 1).&#xD;&#xA;_defValue_: double = 1;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];&#xA;out[1];" ShouldFocus="false" guid="0c114b6a-2f3c-4f2b-9749-4426f6a5d33a" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="6f2a5398-89bb-4db1-912f-4a6b2db0a5c3" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="schedule" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Annual schedule.&#xD;&#xA;schedule;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="ed6fc2fd-6a97-4597-89f8-9ff097d89fbd" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="values" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="570">
      <Symbol value="// Annual hourly values for this schedule. Use this output to double&#xD;&#xA;// check the results. Use 3d chart to visualize the values.&#xD;&#xA;values;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="b932decc-e958-4c71-92e4-42f1d5242071" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="98295ede-36a0-438b-a1c6-296545125a05" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="8a452e1c-eac5-4c8b-b8d1-d3a347482690" end_index="0" portType="0" start="282c2f77-7425-42d6-9f2b-54b06bcbba48" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="8a452e1c-eac5-4c8b-b8d1-d3a347482690" end_index="1" portType="0" start="282c2f77-7425-42d6-9f2b-54b06bcbba48" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7ab7302d-fe39-423a-af4f-baca344b98c6" end_index="0" portType="0" start="8a452e1c-eac5-4c8b-b8d1-d3a347482690" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7ab7302d-fe39-423a-af4f-baca344b98c6" end_index="1" portType="0" start="930b141d-8bf2-49fc-bec9-f723ac3a3e1c" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7ab7302d-fe39-423a-af4f-baca344b98c6" end_index="2" portType="0" start="22d8cd0a-15d7-4428-a62e-d8bf6c30566c" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7ab7302d-fe39-423a-af4f-baca344b98c6" end_index="3" portType="0" start="d6a5e866-3737-49a1-8425-cb4e4acf91ac" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7ab7302d-fe39-423a-af4f-baca344b98c6" end_index="4" portType="0" start="ca3a60f6-53a6-4c53-bd96-e9501ccf9cea" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="0c114b6a-2f3c-4f2b-9749-4426f6a5d33a" end_index="0" portType="0" start="7ab7302d-fe39-423a-af4f-baca344b98c6" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="6f2a5398-89bb-4db1-912f-4a6b2db0a5c3" end_index="0" portType="0" start="0c114b6a-2f3c-4f2b-9749-4426f6a5d33a" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="ed6fc2fd-6a97-4597-89f8-9ff097d89fbd" end_index="0" portType="0" start="0c114b6a-2f3c-4f2b-9749-4426f6a5d33a" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="b932decc-e958-4c71-92e4-42f1d5242071" end_index="0" portType="0" start="8a452e1c-eac5-4c8b-b8d1-d3a347482690" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="b932decc-e958-4c71-92e4-42f1d5242071" end_index="1" portType="0" start="7ab7302d-fe39-423a-af4f-baca344b98c6" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="98295ede-36a0-438b-a1c6-296545125a05" end_index="0" portType="0" start="b932decc-e958-4c71-92e4-42f1d5242071" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
